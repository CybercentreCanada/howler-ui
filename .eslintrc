{
  "extends": [
    "airbnb-typescript",
    "prettier",
    "react-app",
    "plugin:jsx-a11y/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "prettier",
    "jsx-a11y"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "mocha": true,
    "node": true
  },
  "ignorePatterns": [
    "src/commons/**"
  ],
  "rules": {
    "@typescript-eslint/space-before-function-paren": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/default-param-last": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      // Allow camelCase variables (23.2), PascalCase variables (23.8), and UPPER_CASE variables (23.10)
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "PascalCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "allow"
      },
      // Allow camelCase functions (23.2), and PascalCase functions (23.8)
      {
        "selector": "function",
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "leadingUnderscore": "allow"
      },
      // Airbnb recommends PascalCase for classes (23.3), and although Airbnb does not make TypeScript recommendations, we are assuming this rule would similarly apply to anything "type like", including interfaces, type aliases, and enums
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "import/no-extraneous-dependencies": [
      "warn",
      {
        "packageDir": "./"
      }
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "import/no-extraneous-dependencies": [
      "warn",
      {
        "packageDir": "./"
      }
    ],
    "import/imports-first": [
      "error",
      "absolute-first"
    ],
    "import/newline-after-import": "error",
    "import/no-cycle": "warn",
    "import/prefer-default-export": 0,
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": [
          "Link"
        ],
        "specialLink": [
          "to",
          "hrefLeft",
          "hrefRight"
        ],
        "aspects": [
          "noHref",
          "invalidHref",
          "preferButton"
        ]
      }
    ],
    "linebreak-style": "off",
    "max-len": [
      "off",
      {
        "code": 120,
        "ignoreRegExpLiterals": true,
        "tabWidth": 2,
        "ignoreComments": true
      }
    ],
    "no-console": [
      1
    ],
    "no-nested-ternary": "off",
    "no-param-reassign": "off",
    "no-plusplus": "off",
    "no-underscore-dangle": "off",
    "radix": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ],
    "react/jsx-curly-newline": "off",
    "react/jsx-one-expression-per-line": [
      "off",
      {
        "allow": "literal"
      }
    ],
    "react/jsx-props-no-spreading": "off",
    "react/jsx-wrap-multilines": "off",
    "react/no-array-index-key": "warn",
    "react/prop-types": "off",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "react/react-in-jsx-scope": "off",
    "semi": "error",
    "react/jsx-uses-react": "off",
    "comma-spacing": "warn",
    "react/jsx-no-literals": [
      "warn",
      {
        "noStrings": false,
        "allowedStrings": [
          "/",
          ":",
          "(",
          ")",
          ":&nbsp;",
          "-",
          "."
        ],
        "ignoreProps": false,
        "noAttributeStrings": false
      }
    ]
  },
  "globals": {
    "window": true,
    "document": true,
    "localStorage": true,
    "FormData": true,
    "FileReader": true,
    "Blob": true,
    "navigator": true,
    "Headers": true,
    "Request": true,
    "fetch": true
  }
}
